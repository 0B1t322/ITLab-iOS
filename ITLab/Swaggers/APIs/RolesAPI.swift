//
// RolesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class RolesAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiRolesGet(completion: @escaping ((_ data: [RoleView]?,_ error: Error?) -> Void)) {
        apiRolesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/roles
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "name" : "name",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "name" : "name",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]

     - returns: RequestBuilder<[RoleView]> 
     */
    open class func apiRolesGetWithRequestBuilder() -> RequestBuilder<[RoleView]> {
        let path = "/api/roles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[RoleView]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get roles for specific user

     - parameter userId: (path) Id of user 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiRolesUserIdGet(userId: UUID, completion: @escaping ((_ data: [RoleView]?,_ error: Error?) -> Void)) {
        apiRolesUserIdGetWithRequestBuilder(userId: userId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get roles for specific user
     - GET /api/roles/{userId}
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "name" : "name",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "name" : "name",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]
     - parameter userId: (path) Id of user 

     - returns: RequestBuilder<[RoleView]> 
     */
    open class func apiRolesUserIdGetWithRequestBuilder(userId: UUID) -> RequestBuilder<[RoleView]> {
        var path = "/api/roles/{userId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[RoleView]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter userId: (path)  
     - parameter roleId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiRolesUserIdRoleIdDelete(userId: UUID, roleId: UUID, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiRolesUserIdRoleIdDeleteWithRequestBuilder(userId: userId, roleId: roleId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - DELETE /api/roles/{userId}/{roleId}
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=true}]
     - parameter userId: (path)  
     - parameter roleId: (path)  

     - returns: RequestBuilder<Bool> 
     */
    open class func apiRolesUserIdRoleIdDeleteWithRequestBuilder(userId: UUID, roleId: UUID) -> RequestBuilder<Bool> {
        var path = "/api/roles/{userId}/{roleId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let roleIdPreEscape = "\(roleId)"
        let roleIdPostEscape = roleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{roleId}", with: roleIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter userId: (path)  
     - parameter roleId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiRolesUserIdRoleIdPost(userId: UUID, roleId: UUID, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        apiRolesUserIdRoleIdPostWithRequestBuilder(userId: userId, roleId: roleId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/roles/{userId}/{roleId}
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=true}]
     - parameter userId: (path)  
     - parameter roleId: (path)  

     - returns: RequestBuilder<Bool> 
     */
    open class func apiRolesUserIdRoleIdPostWithRequestBuilder(userId: UUID, roleId: UUID) -> RequestBuilder<Bool> {
        var path = "/api/roles/{userId}/{roleId}"
        let userIdPreEscape = "\(userId)"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let roleIdPreEscape = "\(roleId)"
        let roleIdPostEscape = roleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{roleId}", with: roleIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
