//
// EventRoleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EventRoleAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEventRoleGet(completion: @escaping ((_ data: [EventRoleView]?,_ error: Error?) -> Void)) {
        apiEventRoleGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/EventRole
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "title" : "title"
}, {
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "title" : "title"
} ]}]

     - returns: RequestBuilder<[EventRoleView]> 
     */
    open class func apiEventRoleGetWithRequestBuilder() -> RequestBuilder<[EventRoleView]> {
        let path = "/api/EventRole"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EventRoleView]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEventRolePost(body: EventRoleCreateRequest? = nil, completion: @escaping ((_ data: EventRoleView?,_ error: Error?) -> Void)) {
        apiEventRolePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/EventRole
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "title" : "title"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<EventRoleView> 
     */
    open class func apiEventRolePostWithRequestBuilder(body: EventRoleCreateRequest? = nil) -> RequestBuilder<EventRoleView> {
        let path = "/api/EventRole"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EventRoleView>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEventRolePut(body: EventRoleEditRequest? = nil, completion: @escaping ((_ data: EventRoleView?,_ error: Error?) -> Void)) {
        apiEventRolePutWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /api/EventRole
     - 

     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "title" : "title"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<EventRoleView> 
     */
    open class func apiEventRolePutWithRequestBuilder(body: EventRoleEditRequest? = nil) -> RequestBuilder<EventRoleView> {
        let path = "/api/EventRole"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EventRoleView>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
